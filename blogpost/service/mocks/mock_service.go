// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import globalmodel "github.com/printezisn/serverless-blog-back/global/model"
import mock "github.com/stretchr/testify/mock"
import model "github.com/printezisn/serverless-blog-back/blogpost/model"

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Create provides a mock function with given fields: post
func (_m *Service) Create(post model.BlogPost) globalmodel.Response {
	ret := _m.Called(post)

	var r0 globalmodel.Response
	if rf, ok := ret.Get(0).(func(model.BlogPost) globalmodel.Response); ok {
		r0 = rf(post)
	} else {
		r0 = ret.Get(0).(globalmodel.Response)
	}

	return r0
}

// Delete provides a mock function with given fields: id
func (_m *Service) Delete(id string) globalmodel.Response {
	ret := _m.Called(id)

	var r0 globalmodel.Response
	if rf, ok := ret.Get(0).(func(string) globalmodel.Response); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(globalmodel.Response)
	}

	return r0
}

// Get provides a mock function with given fields: id
func (_m *Service) Get(id string) globalmodel.Response {
	ret := _m.Called(id)

	var r0 globalmodel.Response
	if rf, ok := ret.Get(0).(func(string) globalmodel.Response); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(globalmodel.Response)
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *Service) GetAll() globalmodel.Response {
	ret := _m.Called()

	var r0 globalmodel.Response
	if rf, ok := ret.Get(0).(func() globalmodel.Response); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(globalmodel.Response)
	}

	return r0
}

// GetMore provides a mock function with given fields: lastID
func (_m *Service) GetMore(lastID string) globalmodel.Response {
	ret := _m.Called(lastID)

	var r0 globalmodel.Response
	if rf, ok := ret.Get(0).(func(string) globalmodel.Response); ok {
		r0 = rf(lastID)
	} else {
		r0 = ret.Get(0).(globalmodel.Response)
	}

	return r0
}

// Update provides a mock function with given fields: post
func (_m *Service) Update(post model.BlogPost) globalmodel.Response {
	ret := _m.Called(post)

	var r0 globalmodel.Response
	if rf, ok := ret.Get(0).(func(model.BlogPost) globalmodel.Response); ok {
		r0 = rf(post)
	} else {
		r0 = ret.Get(0).(globalmodel.Response)
	}

	return r0
}
